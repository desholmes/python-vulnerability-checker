.PHONY: build \
clean clean-dangling-images \
push \
run-generic run-fail run-pass \
setup

-include .env

$(eval REGISTRY=$(shell grep '* Registry:' README.md | awk -F ':' '{print $$2}' | sed 's/ //g'))
$(eval REPOSITORY=$(shell grep '* Repository name:' README.md | awk -F ':' '{print $$2}' | sed 's/ //g'))
$(eval VERSION=$(shell grep '* Current version:' README.md | awk -F ':' '{print $$2}' | sed 's/ //g'))

setup:
	@cp .env-dist .env

clean-dangling-images:
	@docker rmi -f $$(docker images -f 'dangling=true' -q)

clean:
	@rm .env

build:
	@docker build \
	  --no-cache \
	  -f ./Dockerfile \
	  -t $(REGISTRY)/$(REPOSITORY):$(VERSION) .

build-run-pass:
	@make build
	@make run-pass

push:
	docker push $(REGISTRY)/$(REPOSITORY):$(VERSION)

run-generic:
	@docker run --rm -it \
		-e SKJOLD_GITHUB_API_TOKEN=$(SKJOLD_GITHUB_API_TOKEN) \
		-v $(PWD)/$(project_folder)/requirements.txt:/usr/src/app/requirements.txt \
		-v $(PWD)/$(project_folder)/skjold-report.json:/usr/src/app/skjold-report.json \
	$(REGISTRY)/$(REPOSITORY):$(VERSION)

run-pass:
	@make run-generic project_folder="test_pass_project"
	
run-fail:
	@make run-generic project_folder="test_fail_project"
